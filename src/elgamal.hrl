-ifndef(ELGAMAL_HRL).
-define(ELGAMAL_HRL, true).

%% Public key
-record(pk, {
             %% integer()
             h
            }).

%% Secret key
-record(sk, {
             %% integer()
             x
            }).

%% The ElGamal encryption depends on non-hidden ElGamal constants in
%% order to make randomization of ciphertexts feasible (see below).
%% This might be a problem as described in section 6.2 in
%% https://hal.inria.fr/hal-01376934v2/document. The current constants
%% are carefully picked but longer safe primes can be generated with
%% elgamal:generate_encryption_factors/0.

%% The largest 1024-bit safe prime
-define(P, ((1 bsl 1024) - 1093337)).
%% Base point for modular exponentiation
-define(G, 7).
%% Order of group generated by p and equals p-1
-define(Q, (?P - 1)).
%% The largest possible plaintext message
-define(MAX_MESSAGE_SIZE, 128).

-endif.
